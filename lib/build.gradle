plugins {
    id "com.android.library" version "$agp_version"
    id "org.jetbrains.kotlin.android" version "$kotlin_version"
    id "org.jetbrains.kotlin.kapt" version "$kotlin_version"
    id 'maven-publish'
}

def versionFile = project.file("version.gradle")

logger.quiet("Version file: $versionFile")

apply from: versionFile


def module = "snitch"
group = "ca.mahram.snitch"
version = libraryVersion

logger.quiet("$group:$module:$version")

android {
    namespace 'ca.mahram.snitch'
    compileSdk 34

    defaultConfig {
        minSdk 30
        targetSdk 34
        versionCode 1
        versionName "1.0"

        archivesBaseName = "snitch-$version"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility = JavaVersion.VERSION_1_8
        sourceCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {

    implementation "androidx.core:core-ktx:$androidx_core_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.1'
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = group
            artifactId = 'snitch'

            afterEvaluate {
                from components.release
            }
        }
    }
}

tasks.register("jitpackBuild") {
    group = "build"
    description = "JitPack-aware build with branch/version enforcement"

    // This task depends on the real build task
    dependsOn "build"

    doFirst {
        if (!project.ext.isJitpackable) {
            throw new GradleException("Current branch is not JitPack-buildable")
        }
    }
}

